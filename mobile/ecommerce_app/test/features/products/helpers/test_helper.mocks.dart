// Mocks generated by Mockito 5.4.6 from annotations
// in ecommerce_app/test/features/products/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:ecommerce_app/core/network/network_info.dart' as _i7;
import 'package:ecommerce_app/features/product/data/data_sources/local/local_data_source.dart'
    as _i6;
import 'package:ecommerce_app/features/product/data/data_sources/remote/remote_data_source.dart'
    as _i3;
import 'package:ecommerce_app/features/product/data/models/product_model.dart'
    as _i2;
import 'package:ecommerce_app/features/product/domain/entities/product.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeProductModel_0 extends _i1.SmartFake implements _i2.ProductModel {
  _FakeProductModel_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [RemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteDataSource extends _i1.Mock implements _i3.RemoteDataSource {
  MockRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> deleteProduct(String? productid, String? token) =>
      (super.noSuchMethod(
            Invocation.method(#deleteProduct, [productid, token]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<_i2.ProductModel> getProductById(
    String? productid,
    String? token,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getProductById, [productid, token]),
            returnValue: _i4.Future<_i2.ProductModel>.value(
              _FakeProductModel_0(
                this,
                Invocation.method(#getProductById, [productid, token]),
              ),
            ),
          )
          as _i4.Future<_i2.ProductModel>);

  @override
  _i4.Future<bool> insertProduct(_i5.Product? product, String? token) =>
      (super.noSuchMethod(
            Invocation.method(#insertProduct, [product, token]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<bool> updateProduct(
    String? productid,
    _i5.Product? product,
    String? token,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateProduct, [productid, product, token]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<List<_i2.ProductModel>> getAllProducts(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#getAllProducts, [token]),
            returnValue: _i4.Future<List<_i2.ProductModel>>.value(
              <_i2.ProductModel>[],
            ),
          )
          as _i4.Future<List<_i2.ProductModel>>);
}

/// A class which mocks [LocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDataSource extends _i1.Mock implements _i6.LocalDataSource {
  MockLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.ProductModel> getProduct() =>
      (super.noSuchMethod(
            Invocation.method(#getProduct, []),
            returnValue: _i4.Future<_i2.ProductModel>.value(
              _FakeProductModel_0(this, Invocation.method(#getProduct, [])),
            ),
          )
          as _i4.Future<_i2.ProductModel>);

  @override
  _i4.Future<void> cacheProduct() =>
      (super.noSuchMethod(
            Invocation.method(#cacheProduct, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<String?> getAccessToken() =>
      (super.noSuchMethod(
            Invocation.method(#getAccessToken, []),
            returnValue: _i4.Future<String?>.value(),
          )
          as _i4.Future<String?>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i7.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConnected =>
      (super.noSuchMethod(
            Invocation.getter(#isConnected),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);
}
